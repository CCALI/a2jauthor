<can-import from="./page-buttons.less" />
<can-import from="../var-picker/" />

<fieldset name="record">
  <legend>Buttons</legend>
  <div>
    <div>
      <label>Number of Buttons</label>
      <select list="Buttons" class="form-control picklist" value:bind="numButtons">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
      </select>
    </div>
    <table class="page-edit-buttons list table table-striped" list="Buttons">
      <tbody class="ui-sortable">
        {{#for(button of observableButtons)}}
          <tr valign="top" class="step-stepundefined button-row" name="record">
            <td class="newediticons">
              <span class="list-position">
                <button
                  title="Move button up"
                  aria-label="Move button up"
                  class="glyphicon-up-dir {{^if(canMoveButtonUp(button)}}disabled{{/if}}"
                  on:click="moveButtonUp(button)"
                ></button>
                <button
                  title="Move button down"
                  aria-label="Move button down"
                  class="glyphicon-down-dir {{^if(canMoveButtonDown(button)}}disabled{{/if}}"
                  on:click="moveButtonDown(button)"
                ></button>
              </span>
              <button
                title="Add New Button {{^if(canAddButton}}(disabled, maximum number of buttons is {{maxButtons}}){{/if}}"
                aria-label="Add New Button {{^if(canAddButton}}(disabled, maximum number of buttons is {{maxButtons}}){{/if}}"
                class="ui-icon-circle-plus glyphicon-plus-circled {{^if(canAddButton}}disabled{{/if}}"
                on:click="addButton(button)"
              ></button>
              <button
                title="Remove Button {{^if(canRemoveButton}}(disabled, minimum number of buttons is {{minButtons}}){{/if}}"
                aria-label="Remove Button {{^if(canRemoveButton}}(disabled, minimum number of buttons is {{minButtons}}){{/if}}"
                class="ui-icon-circle-minus glyphicon-minus-circled {{^if(canRemoveButton}}disabled{{/if}}"
                on:click="removeButton(button)"
              ></button>
            </td>
            <td>
              <div class="editspan form-group">
                <label class="control-label">Label:</label>
                <input class="form-control ui-widget editable" type="text" placeholder="button label" value:bind="button.label">
              </div>
              <div class="div">
                {{let nameVarPickerVisible = newObservableBool(false)}}
                {{let buttonNameVar = newObservableProxy(button, 'name')}}
                <label class="control-label">Variable Name:</label>
                <div class="form-group has-var-picker">
                  <input
                    class="
                      form-control ui-combobox-input editable
                      autocomplete picker varname dest ui-autocomplete-input
                      {{^if(validVarName(buttonNameVar.value)}}invalid-entry{{/if}}
                    "
                    placeholder=""
                    type="text"
                    autocomplete="off"
                    on:focus="nameVarPickerVisible.value = true"
                    value:bind="buttonNameVar.value"
                    on:input="buttonNameVar.value = scope.element.value"
                  >
                  <div class="var-picker-toggle">
                    <button aria-label="Toggle Variable Picker" on:click="toggleBool(nameVarPickerVisible)" class="glyphicon-list-bullet"></button>
                    {{#if(nameVarPickerVisible.value)}}
                      <var-picker appState:from="appState" varName:bind="buttonNameVar.value" selectedCallback:from="nameVarPickerVisible.value = false" />
                    {{/if}}
                  </div>
                </div>
              </div>
              <div class="editspan form-group">
                <label class="control-label">Default Value:</label>
                <input class="form-control ui-widget editable" type="text" placeholder="" value:bind="button.value">
              </div>
              <div class="destination-picker" name="undefined">
                <label>Destination:</label>
                <span>{{button.next}}</span>
                <button
                  on:click="pickPageDialog(scope.element, button, scope.index)"
                  class="btn btn-default ui-button ui-corner-all ui-widget glyphicon-link"
                >
                  Set Destination
                </button>
              </div>
              <div class="editspan form-group hidden" name="url">
                <label class="control-label">URL:</label>
                <input class="form-control ui-widget editable" type="text" placeholder="" value:bind="button.url">
              </div>
              <div class="editspan form-group {{^if(showMessageInputForButton[scope.index]}}hidden{{/if}}" name="message">
                <label class="control-label">Message:</label>
                <input
                  class="form-control ui-widget editable"
                  type="text"
                  placeholder="You have completed this A2J Guided Interview. Please close your browser window to exit."
                  value:bind="button.message">
              </div>
              <div name="undefined">
                <div class="editspan form-group">
                  <label class="control-label">Repeat Options:</label>
                  <select class="form-control" value:bind="button.repeatVarSet">
                    <option value="">Normal</option>
                    <option value="=1">Set Counting Variable to 1</option>
                    <option value="+=1">Increment Counting Variable</option>
                  </select>
                </div>
              </div>
              <div class="div">
                {{let varPickerVisible = newObservableBool(false)}}
                {{let buttonVar = newObservableProxy(button, 'repeatVar')}}
                <label class="control-label">Counting Variable:</label>
                <div class="form-group has-var-picker">
                  <input
                    class="form-control ui-combobox-input editable
                      autocomplete picker varname dest ui-autocomplete-input
                      {{^if(validVarName(buttonVar.value)}}invalid-entry{{/if}}
                    "
                    placeholder=""
                    type="text"
                    autocomplete="off"
                    on:focus="varPickerVisible.value = true"
                    value:bind="buttonVar.value"
                    on:input="buttonVar.value = scope.element.value"
                  >
                  <div class="var-picker-toggle">
                    <button aria-label="Toggle Variable Picker" on:click="toggleBool(varPickerVisible)" class="glyphicon-list-bullet"></button>
                    {{#if(varPickerVisible.value)}}
                      <var-picker appState:from="appState" varName:bind="buttonVar.value" selectedCallback:from="varPickerVisible.value = false" />
                    {{/if}}
                  </div>
                </div>
              </div>
            </td>
          </tr>
        {{/for}}
      </tbody>
    </table>
  </div>
</fieldset>
