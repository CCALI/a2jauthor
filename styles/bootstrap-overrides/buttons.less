/**
  * @stylesheet buttons.less Buttons
  * @parent styles-base 1
  *
  * @description
  * Use the button classes on an `<a>`, `<button>`, or `<input>` element.
  *
  * ```
  * <a class="btn btn-default" href="#" role="button">Link</a>
  * <button class="btn btn-default" type="submit">Button</button>
  * <input class="btn btn-default" type="button" value="Input">
  * <input class="btn btn-default" type="submit" value="Submit">
  *```
  *
  * @demo demos/buttons/demo.html
  *
  * > #### Context-specific usage
  * > While button classes can be used on `<a>` and `<button>` elements, only `<button>` elements are supported within our nav and navbar components.
  *
  * > #### Links acting as buttons
  * > If the `<a>` elements are used to act as buttons - triggering in-page functionality, rather than navigating to another document or section within the current page - they should also be given an appropriate `role="button"`.
  *
  * > #### Cross-browser rendering
  * > As a best practice, we highly recommend using the `<button>` element whenever possible to ensure matching cross-browser rendering.
  * >
  * > Among other things, there's a bug in Firefox <30 that prevents us from setting the `line-height` of `<input>` - based buttons, causing them to not exactly match the height of other buttons on Firefox.
  *
  * ## Options
  * Use any of the available button classes to quickly create a styled button.
  *
  * @demo demos/buttons-options/demo.html
  *
  * > #### Conveying meaning to assistive technologies
  * > Using color to add meaning to a button only provides a visual indication, which will not be conveyed to users of assistive technologies - such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (the visible text of the button), or is included through alternative means, such as additional text hidden with the `.sr-only` class.
  *
  * ## Dropdown
  * Any button can be a dropdown toggle.
  * 
  * The interaction is handled by `dropdown.js` which is not included in the style guide. 
  * The javascript adds a class `.open` to the parent `.btn-group` class allowing the 
  * `.dropdown-menu` class to display.
  *
  * @demo demos/buttons-dropdown/demo.html
  *
  * ## Sizes
  * Fancy larger or smaller buttons- Add `.btn-lg`, `.btn-sm`, or `.btn-xs` for additional sizes.
  *
  * @demo demos/buttons-sizes/demo.html
  *
  * Create block level buttons-those that span the full width of a parent- by adding `.btn-block`.
  *
  * @demo demos/buttons-block/demo.html
  *
  * ## Active state
  * Buttons will appear pressed (with a darker background, darker border, and inset shadow) when active. For `<button>` elements, this is done via `:active`. For `<a>` elements, it's done with `.active`. However, you may use `.active` on `<button>`s (and include the `aria-pressed="true"` attribute) should you need to replicate the active state programmatically.
  *
  * ### Button element
  * No need to add `:active` as it's a pseudo-class, but if you need to force the same appearance, go ahead and add `.active`.
  *
  * @demo demos/buttons-element/demo.html
  *
  * ### Anchor element
  * Add the `.active` class to `<a>` buttons.
  *
  * @demo demos/buttons-anchor/demo.html
  *
  * ## Disabled state
  * Make buttons look unclickable by fading them back with `opacity`.
  *
  * ### Button element
  * Add the `disabled` attribute to `<button>` buttons.
  *
  * @demo demos/buttons-disabled-element/demo.html
  *
  * > #### Cross-browser compatibility
  * > If you add the `disabled` attribute to a `<button>`, Internet Explorer 9 and below will render text gray with a nasty text-shadow that we cannot fix.
  *
  * ### Anchor element
  * Add the `.disabled` class to `<a>` buttons.
  *
  * @demo demos/buttons-disabled-anchor/demo.html
  *
  * We use .disabled as a utility class here, similar to the common .active class, so no prefix is required.
  *
  * > #### Link functionality caveat
  * > This class uses `pointer-events: none` to try to disable the link functionality of `<a>`s, but that CSS property is not yet standardized and isn't fully supported in Opera 18 and below, or in Internet Explorer 11. In addition, even in browsers that do support `pointer-events: none`, keyboard navigation remains unaffected, meaning that sighted keyboard users and users of assistive technologies will still be able to activate these links. So to be safe, use custom JavaScript to disable such links.
  **/


/**
* @styles var-buttons Buttons
* @parent variables.less
*
* `buttons.less` for each of Bootstrap's buttons, define text, background and border color.
*
**/

//== Buttons
//
//##

@btn-font-weight:                normal;

@btn-default-color:              #333;
@btn-default-bg:                 #fff;
@btn-default-border:             #ccc;

@btn-primary-color:              #fff;
@btn-primary-bg:                 @brand-secondary;
@btn-primary-border:             darken(@btn-primary-bg, 5%);

@btn-success-color:              #fff;
@btn-success-bg:                 @brand-success;
@btn-success-border:             darken(@btn-success-bg, 5%);

@btn-info-color:                 #fff;
@btn-info-bg:                    @brand-info;
@btn-info-border:                darken(@btn-info-bg, 5%);

@btn-warning-color:              #fff;
@btn-warning-bg:                 @brand-warning;
@btn-warning-border:             darken(@btn-warning-bg, 5%);

@btn-danger-color:               #fff;
@btn-danger-bg:                  @brand-danger;
@btn-danger-border:              darken(@btn-danger-bg, 5%);

@btn-link-disabled-color:        @gray-light;

// Allows for customizing button radius independently from global border radius
@btn-border-radius-base:         @border-radius-base;
@btn-border-radius-large:        @border-radius-large;
@btn-border-radius-small:        @border-radius-small;

/**
* @styles margins Margins
* @parent buttons.less 2
*
* Adds a right margin to button class `.btn` to give more distance between clickstates.
*
* @demo demos/buttons/button-margin.html
*
**/

@btn-right-margin:                10px;

// Setting button margins wider
.bootstrap-styles .btn {
  margin-right: @btn-right-margin;
}
.bootstrap-styles .btn:last-child {
  margin-right: 0;
}

/**
* @styles widths Button Widths
* @parent buttons.less 3
*
* Creates button widths for uniform button sizing: `.btn-wide-sm`, `.btn-wide-md`, and `.btn-wide-lg`.
* Widths are applied using `min-width` declaration so that buttons with longer text will expand the button (rather than get clipped).
*
* @demo demos/buttons/button-widths.html
*
**/
// Extending buttons with width options
@btn-wide-sm:                    100px;
@btn-wide-md:                    225px;
@btn-wide-lg:                    350px;

.btn-wide-sm {
  min-width: @btn-wide-sm;
}
.btn-wide-md {
  min-width: @btn-wide-md;
}
.btn-wide-lg {
  min-width: @btn-wide-lg;
}